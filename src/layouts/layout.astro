---
// src/layouts/layout.astro
import '../styles/main.css';

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
  </head>
  <body>
    <div class="container">
      <slot />
    </div>

    <script>
      const themeToggle = document.getElementById('theme-toggle');
      const html = document.documentElement;
  
      const currentTheme = localStorage.getItem('theme') || 'dark';
      html.setAttribute('data-theme', currentTheme);
  
      if (themeToggle) {
        themeToggle.addEventListener('click', () => {
          const currentTheme = html.getAttribute('data-theme');
          const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
          html.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
        });
      }

      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();

          const href = this.getAttribute('href');

          if (href) {
            const targetElement = document.querySelector(href);
            if (targetElement) {
              targetElement.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          }
        });
      });

      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const target = entry.target;
            target.style.opacity = '1';
            target.style.transform = 'translateY(0)';
          }
        });
      }, observerOptions);

      document.querySelectorAll('.tech-item, .social-link').forEach(el => {
        observer.observe(el);
      });
    </script>
  </body>
</html>