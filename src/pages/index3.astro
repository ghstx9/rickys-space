---
// src/pages/index3.astro
import '../styles/main3.css';

---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Ricky's Space</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
  </head>
  <body>
    <div class="container">
      <nav class="nav">
        <div class="nav-links">
          <a href="/" class="nav-link">home</a>
          <a href="/index2" class="nav-link">projects</a>
          <a href="/index3" class="nav-link active">experience</a>
        </div>
        
        <button class="theme-toggle" id="theme-toggle" aria-label="Toggle theme">
          <svg class="sun-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="5"></circle>
            <line x1="12" y1="1" x2="12" y2="3"></line>
            <line x1="12" y1="21" x2="12" y2="23"></line>
            <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
            <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
            <line x1="1" y1="12" x2="3" y2="12"></line>
            <line x1="21" y1="12" x2="23" y2="12"></line>
            <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
            <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
          </svg>
          <svg class="moon-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
          </svg>
        </button>
      </nav>

      <main class="main">
        <section class="page-header">
          <h1 class="page-title">experience</h1>
          <p class="page-description">
            my journey in software development, education, and the skills i've built along the way
          </p>
        </section>

        <section class="experience-section">
          <h2 class="section-heading">Education</h2>
          <div class="timeline">
            <div class="timeline-item">
              <div class="timeline-marker"></div>
              <div class="timeline-content">
                <div class="timeline-header">
                  <h3 class="timeline-title">Software Engineering Student</h3>
                  <span class="timeline-meta">
                    <a href="https://smknegeri7batam.sch.id/" target="_blank" rel="noopener noreferrer" class="institution-link">
                      SMK Negeri 7 Batam (Skaju)
                    </a>
                    <span class="timeline-date">2024 - Present</span>
                  </span>
                </div>
                <p class="timeline-description">
                  currently pursuing vocational education in software engineering, focusing on web development, 
                  programming fundamentals, and modern development practices.
                </p>
                <div class="timeline-skills">
                  <span class="skill-tag">Web Development</span>
                  <span class="skill-tag">Back-End Logic</span>
                  <span class="skill-tag">UI/UX Design</span>
                  <span class="skill-tag">UI/UX Principles</span>
                </div>
              </div>
            </div>
          </div>
        </section>

        <section class="experience-section">
          <h2 class="section-heading">Technical Skills</h2>
          <div class="skills-grid">
            <div class="skill-category">
              <h3 class="skill-category-title">Front-End Development</h3>
              <div class="skill-items">
                <div class="skill-item">
                  <span class="skill-name">HTML5</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 95%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">CSS</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 75%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">Astro</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 80%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">React</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 20%"></div>
                  </div>
                </div>
                
              </div>
            </div>

            <div class="skill-category">
              <h3 class="skill-category-title">Tools & Workflow</h3>
              <div class="skill-items">
                <div class="skill-item">
                  <span class="skill-name">Git & GitHub</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 80%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">Vite</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 75%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">NPM/Package Management</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 65%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">VS Code</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 90%"></div>
                  </div>
                </div>
              </div>
            </div>

            <div class="skill-category">
              <h3 class="skill-category-title">UI/UX</h3>
              <div class="skill-items">
                <div class="skill-item">
                  <span class="skill-name">Responsive Design</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 85%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">CSS Animations</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 80%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">UI Design</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 85%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">Color Theory</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 45%"></div>
                  </div>
                </div>
              </div>
            </div>

            <div class="skill-category">
              <h3 class="skill-category-title">Design</h3>
              <div class="skill-items">
                <div class="skill-item">
                  <span class="skill-name">Canva</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 95%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">Adobe Photoshop</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 60%"></div>
                  </div>
                </div>
                <div class="skill-item">
                  <span class="skill-name">Figma</span>
                  <div class="skill-bar">
                    <div class="skill-progress" style="width: 85%"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>

        <div class="cta">
          <p class="cta-text">interested in working together?</p>
          <a href="https://www.instagram.com/devdfx/" target="_blank" rel="noopener noreferrer" class="cta-button">
            <span>message me on instagram</span>
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M7 17L17 7M17 7H7M17 7V17"/>
            </svg>
          </a>
        </div>

        <footer class="footer">
          <div class="social-links">
            <a href="https://x.com/dfxyeet" target="_blank" rel="noopener noreferrer" class="social-link">twitter</a>
            <a href="mailto:rickyaldiansyah92@gmail.com" class="social-link">email</a>
            <a href="https://github.com/ghstx9" target="_blank" rel="noopener noreferrer" class="social-link">github</a>
            <a href="https://discord.com/invite/2KXSDTp8wA" target="_blank" rel="noopener noreferrer" class="social-link">discord</a>
          </div>
          <p class="footer-text">
            Â© 2025 ricky aldiansyah. crafted with 
            <a href="https://astro.build/" target="_blank" rel="noopener noreferrer" class="astro-gradient-link">astro.</a>
          </p>
        </footer>
      </main>
    </div>

    <script>
      const themeToggle = document.getElementById('theme-toggle');
      const html = document.documentElement;
  
      const currentTheme = localStorage.getItem('theme') || 'dark';
      html.setAttribute('data-theme', currentTheme);
  
      if (themeToggle) {
        themeToggle.addEventListener('click', () => {
          const currentTheme = html.getAttribute('data-theme');
          const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
          html.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
        });
      }

      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', (e) => {
          e.preventDefault();
          const href = (e.currentTarget as HTMLAnchorElement).getAttribute('href');
          if (href) {
            const targetElement = document.querySelector(href);
            if (targetElement) {
              targetElement.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          }
        });
      });

      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const target = entry.target as HTMLElement;
            target.style.opacity = '1';
            target.style.transform = 'translateY(0)';
          }
        });
      }, observerOptions);

      document.querySelectorAll('.timeline-item, .skill-category, .journey-card, .interest-item').forEach(el => {
        const htmlEl = el as HTMLElement;
        htmlEl.style.opacity = '0';
        htmlEl.style.transform = 'translateY(30px)';
        htmlEl.style.transition = 'all 0.8s ease-out';
        observer.observe(el);
      });

      const skillObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const skillBars = entry.target.querySelectorAll('.skill-progress');
            skillBars.forEach((bar, index) => {
              setTimeout(() => {
                (bar as HTMLElement).style.transform = 'scaleX(1)';
              }, index * 100);
            });
          }
        });
      }, observerOptions);

      document.querySelectorAll('.skill-category').forEach(category => {
        skillObserver.observe(category);
      });
    </script>
  </body>
</html>